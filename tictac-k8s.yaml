# Minimal Kubernetes deployment for TicTac Online
---
apiVersion: v1
kind: Namespace
metadata:
  name: tictac
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tictac-config
  namespace: tictac
data:
  DATABASE_URL: "ws://surrealdb:8000"
  SERVER_HOST: "0.0.0.0"
  SERVER_PORT: "8080"
  PUBLIC_API_URL: "http://localhost:30080"
---
apiVersion: v1
kind: Secret
metadata:
  name: tictac-secret
  namespace: tictac
type: Opaque
stringData:
  JWT_SECRET: "your-secret-key-change-in-production"
  ADMIN_EMAIL: "admin@example.com"
  ADMIN_PASSWORD: "adminpass"
---
# SurrealDB
apiVersion: apps/v1
kind: Deployment
metadata:
  name: surrealdb
  namespace: tictac
spec:
  replicas: 1
  selector:
    matchLabels:
      app: surrealdb
  template:
    metadata:
      labels:
        app: surrealdb
    spec:
      containers:
      - name: surrealdb
        image: docker.io/surrealdb/surrealdb:v2.3.7
        args:
          - start
          - --user=root
          - --pass=root
          - memory
        ports:
        - containerPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: surrealdb
  namespace: tictac
spec:
  selector:
    app: surrealdb
  ports:
  - port: 8000
    targetPort: 8000
---
# Server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
  namespace: tictac
spec:
  replicas: 1
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
    spec:
      initContainers:
      - name: wait-for-surrealdb
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z surrealdb 8000; do echo waiting for surrealdb; sleep 2; done']
      containers:
      - name: server
        image: localhost/tictac-server:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: tictac-config
        - secretRef:
            name: tictac-secret
---
apiVersion: v1
kind: Service
metadata:
  name: server
  namespace: tictac
spec:
  type: NodePort
  selector:
    app: server
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 30080
---
# Client
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client
  namespace: tictac
spec:
  replicas: 1
  selector:
    matchLabels:
      app: client
  template:
    metadata:
      labels:
        app: client
    spec:
      containers:
      - name: client
        image: localhost/tictac-client:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
        env:
        - name: PUBLIC_API_URL
          value: "http://localhost:30080"
        - name: PORT
          value: "3000"
        - name: ORIGIN
          value: "http://localhost:30030"
---
apiVersion: v1
kind: Service
metadata:
  name: client
  namespace: tictac
spec:
  type: NodePort
  selector:
    app: client
  ports:
  - port: 3000
    targetPort: 3000
    nodePort: 30030